= Development Widgets: Objects =
I will here explain the role of the objects that are involved. 

[http://dennissangmo.se/JS_Widget_Str.jpg]


===Widget object example (ajax_template)===
   
====In theory====
This klass represent your widget and all the function that will interact with it. It will inherit the "Widget"-prototype wich allow "Desktop" to use it as an widget. This is done with the command 
{{{yourKlassName.Inherits(Widget);}}} 

=====Create=====
There is an important step that cant be skipped in your widget-constructor or els the widget cant be used. This is the execution of the "create"-function wich is located in the widget-prototype-object. Here's an example {{{this.create(id, wnd_options, partialClasses);}}}.

====Partial content====
If you are in need of updating a partial area in your widget without messing with the other parts. You can do that with the inherted "Widget"-object prototype function named "setPartialContent". See [Development_widgets_objects#setPartialContent setPartialContent] for more info!


===Widget===
Widget is an object that will represent the widgetwindow and contains all the functions that are common for all diffrent kind of widgets that are developed. This klass must be inherited in your widget-klass in order for you to be able to use its prototype-functions, and allowing "Desktop" to be able to use it as an widget.

The examples downbelow if from your perspective... That means when im useing the word "this" its refering to your widget-object.

====Variables====
 * id (int): The Project_widget_id of with widget. {{{this.id}}}
 * widgetIconId (string): The Id of the icon. {{{this.widgetIconId}}}
 * divId (string): The id of the div. {{{this.divId}}}
 * wnd (object): The google window object. {{{this.wnd}}}

====Functions====
=====index=====
_Explanation:_ This function is ment for you as an developer to overwrite with e new index function. This is the first function to be executed.

<hr>

=====setWindowContent=====
Allows you to change the html in the widget window. This will remove the current content. The second field in the parameter array can be used assigned a string in you want the data content to be inserted in a specific partial area.<br>
_Parameters:_
 * args (array): '0 = data' This is a string of the html document to be inserted. '1 = partial' This is a string with the name of the id or class attribute of the wanted area.
_Example: {{{this.setWindowContent(array("<b>Hello World</b>", "insideme"));}}}_

<hr>

=====catchStatus=====
This function is great to use as a ajax-success function, if you dont want to update the widow content but only give the ok or the eroor message of the ajax-request. If you are using this function as a success-function the data from your php-code needs to be as a JSON object, containing up to 3 variables. First we have the "status" field wich cointais "ok" or "error", the "status_message" wich contains the message. Last we have the "load" field wich is opional and can contail a function name, that function will be executed.<br>
_Parameters:_
 * data (string): A JSON object with 4 differrent fields.
  * 'status': If success this should be "ok" else "error".
  * 'status_message': A message
  * 'load' (opitonal): A funktionname in your widget-class you want to be executed after.
  * 'loadparams' (optional): This content will be used as an argument to your named funktion in the 'load' parameter.
_Example: {{{this.catchStatus('{"status":"ok","status_message":"Everything went ok!"});}}}_

<hr>

===Desktop===
Desktop is a static object that represent the real-life "desktop-area" where all the widget windows will be. It does not only take care of all the widget object, that i talked earlier about, it also know wich object that is the current one (the selected one). I will explain the variables and functions that are relevant for the widget-development. 

====Functions====
=====callWidgetFunction=====
Will execute the function with the name as the "func" parameter. Its posible to send parameters to the function in "func", all parameters after the "func"-parameter will be passed.<br>
_Parameters:_
 * pwID (int): The widget project_widget_id.
 * func (string): The name of the function to be executed.
 * params (mixed): The parameters to be passed into the function. If you send more than one it will be cought in the widget-function as one array-parameter.
_Example: {{{Desktop.callWidgetFunction(152, "saveForm", 1, "test");}}}_

<hr>

=====show_message=====
this function will display an ok-message<br>
_Parameters:_
 * message (String): The message to be displayed
_Example: {{{Desktop.show_message("Everything went ok!");}}}_

<hr>

=====show_errormessage(message)=====
this function will display an error-message<br>
_Parameters:_
 * message (String): The message to be displayed
_Example: {{{Desktop.show_errormessage("A error has occurred!");}}}_

<hr>

===ajaxRequest===
This static object is more of a helperobject, all to make it easier for the widget-developer to send requests to the controller.

_Example: ajaxRequest.load("http://thisproject.com/index.php/controller/function", "myWidget.ajaxSuccess", "myWidget.ajaxError", false);_

====Functions====
=====load=====
Makes a ajax request for the specified loadURL and calls the successFunction inside the widget-object.<br>
_Parameters:_
 * pwID (int): The widget project_widget_id.
 * loadURL (String): The url to load
 * successFunction (String): The funktion to call when success ("yourFunction"). Must be able to catch 1 parameter (the page), it will be escaped, use function unescape(). 
 * partial (string) optional: Partialarea-name this parameter will be transfered to the successfunction. See the setWindowContent in the Widgetclass. This will also block the loading-icon, you can also stop this with true.

<hr>

=====post=====
Makes a ajax request for the specified loadURL with the postdata and calls the successFunction inside the widget-object.
_Parameters:_
 * pwID (int): The widget project_widget_id.
 * postdata (object): The postdata of the form. Can be caught with the jquery "serialize()" function.
 * loadURL (String): The url to load
 * successFunction (String): The funktion to call when success ("yourFunction"). 
 * partial (string) optional: Partialarea-name this parameter will be transfered to the successfunction. See the setWindowContent in the Widgetclass. This will also block the loading-icon, you can also stop this with true.

<hr>

<p><br /><a href="https://code.google.com/p/onlineprojectplanner/wiki/Development_widgets"><< back to Development Widgets</a></p>